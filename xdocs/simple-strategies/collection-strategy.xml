<?xml version="1.0"?>
<!-- 
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<document>
	<properties>
		<author email="christophe.lombart@gmail.com">Christophe Lombart</author>
		<title>Simple Object Mapping Strategies</title>
	</properties>
	<body>
		
		<section name="Mapping Collection Fields">
			<subsection name="Introduction">
				<p>The collection-descriptor maps a collection attribute into JCR nodes or in a multivalue property.</p>
				<p>Based on our model defined <a href="introduction-strategies.html">here</a>, the following collection-descriptor is used to map the "paragraphs" field into the JCR node called "paragraphs".</p>
				
				<source><![CDATA[ 				
<class-descriptor className="org.apache.portals.graffito.jcr.testmodel.Page" jcrType="graffito:page">
	<collection-descriptor fieldName="paragraphs" jcrName="paragraphs" 
			       elementClassName="org.apache.portals.graffito.jcr.testmodel.Paragraph" />
	<!-- other field, bean and collection mapping here !-->
</class-descriptor>
																		
<class-descriptor className="org.apache.portals.graffito.jcr.testmodel.Paragraph" jcrType="graffito:paragraph">
	<field-descriptor fieldName="path" path="true" />
	<field-descriptor fieldName="text" jcrName="graffito:text"/>
</class-descriptor>									
				]]></source>
								
				<p>
					The collection-descriptor contains the elementClassName attribute which specify the collection element class. 
					A class descriptor for the element class has also to be defined.
					
				</p>
								
			</subsection>
							
			<subsection name ="The JCR Structure">
				<p>
					Following our example, the resulting JCR structure is : 		
				</p>
				<p>
				<source><![CDATA[ 
/mysite/page1	
	/mysite/page1/paragraphs
		/mysite/page1/paragraphs/collection-element1
			graffito:text = "This is the content of para1"
		/mysite/page1/paragraphs/collection-element2
			graffito:text = "This is the content of para2"
	... other subnodes for page1 ... 
				]]></source>		  
				</p>						
				<p>
				
				    By default, the persistence manager will create a subnode  (/mysite/page1/paragraphs). 
				    This one will contains the different paragraphs.				    
				</p>
				<p>
				As explained in the following sections, it is possible to map to another JCR structure.
				It is also possible to use another name for the jcr node names (see above).
				</p>
								
			</subsection>
			
			
			<subsection name="Supported Collection and Map Types">			
				<p>
				The OCM framework is supporting the following java types : 
				
				<ol>
				  <li>Collections :  Collection, List, Set,  ArrayList, Vector, HashSet.</li> 
				  <li>Maps : Map, HashMap</li>
				</ol>
				</p>
		
			</subsection>	

			<subsection name ="Using Another Collection or Map">
			   <p>
               It is possible to support other Collection or Map types with the ManageableCollection interface. 
			   </p>
			</subsection>	
			
			<subsection name ="Using Another Collection Converter">
			   <p>
			     TO DO    
			   </p>
			</subsection>	
			<subsection name ="Predefined Collection Converters">
			   <p>
			     TO DO    
			   </p>
			</subsection>
			<subsection name ="Building your own Collection Converters">
			   <p>
			     TO DO    
			   </p>
			</subsection>											
			
			
		</section>
	</body>
</document>
